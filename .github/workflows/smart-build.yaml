name: smart-build.yml
on: 
  push:
    branches:
      - "testing"

jobs:      
  set_variables: 
    name: Get info from commit message
    runs-on: docker-build-etmbp
    permissions:
      contents: read
    outputs:
      frontend_version: ${{ steps.versions.outputs.frontend_version }}
      backend_version: ${{ steps.versions.outputs.backend_version }}
    steps:
      - name: Get frontend version
        id: versions
        run: |
          export FE_VER=$(echo ${{ github.event.head_commit.message }} | grep -oE "\[fev\:[0-9]+\.[0-9]+\.[0-9]+\]" | grep -oE "[0-9]+\.[0-9]+\.[0-9]+")
          echo "frontend_version=$FE_VER" >> $GITHUB_ENV
          echo "frontend_version=$FE_VER" >> $GITHUB_OUTPUT
          export BE_VER=$(echo ${{ github.event.head_commit.message }} | grep -oE "\[bev\:[0-9]+\.[0-9]+\.[0-9]+\]" | grep -oE "[0-9]+\.[0-9]+\.[0-9]+")
          echo "backend_version=$BE_VER" >> $GITHUB_ENV
          echo "backend_version=$BE_VER" >> $GITHUB_OUTPUT
      - name: Show result
        run: |
          echo "Frontend version: $frontend_version"
          echo "Backend version: $backend_version"
          echo "${{ github.ref_name }}"
  build_frontend_image:
    needs: set_variables
    if: ${{  needs.set_variables.outputs.frontend_version }}
    name: Build and push frontend image
    runs-on: docker-build-etmbp
    permissions:
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: zelixplore/chatoverlay-frontend
          tags: |
            type=raw,${{ format('{0}-{1}', github.ref_name, needs.set_variables.outputs.frontend_version) }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  build_backend_image:
    name: Build and push backend image
    needs: set_variables
    if: ${{  needs.set_variables.outputs.backend_version }}
    runs-on: docker-build-etmbp
    permissions:
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: zelixplore/chatoverlay-backend
          tags: |
            type=raw,${{ format('{0}-{1}', github.ref_name, needs.set_variables.outputs.backend_version) }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy_with_helm:
    name: Deploy with helm
    if: ${{ always() }}
    needs: [build_frontend_image, build_backend_image, set_variables]
    runs-on: docker-build-etmbp
    permissions:
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Show results
        run: |
          helm version
          echo "BE Result: ${{needs.build_backend_image.result}}"
          echo "FE Result: ${{needs.build_frontend_image.result}}"
          echo "BE Ver: ${{needs.set_variables.outputs.backend_version}}"
          echo "FE Ver: ${{needs.set_variables.outputs.frontend_version}}"
      - name: Save Kubeconfig
        run: echo "${{secrets.KUBECONFIG}}" > ./kubeconfig
      - name: Full Deploy
        if: ${{ (needs.build_backend_image.result == 'success') && (needs.build_frontend_image.result == 'success') }}
        env:
          KUBECONFIG: ./kubeconfig
        run: |
          helm upgrade --install "${{ format('chatoverlay-{0}', github.ref_name) }}" \
          --namespace "${{ format('chatoverlay-{0}', github.ref_name) }}" \
          --create-namespace \
          --set frontendImage.tag="${{ format('{0}-{1}', github.ref_name, needs.set_variables.outputs.frontend_version) }}" \
          --set backendImage.tag="${{ format('{0}-{1}', github.ref_name, needs.set_variables.outputs.backend_version) }}" \
          --set-json 'frontendIngress.hosts=[{"host":"${{ format('chatoverlay-{0}.etmbp.lo', github.ref_name)}}","paths":[{"path":"/","pathType":"ImplementationSpecific"}]}]' \
          --set-json 'backendIngress.hosts=[{"host":"${{ format('chatoverlay-{0}-backend.etmbp.lo', github.ref_name)}}","paths":[{"path":"/","pathType":"ImplementationSpecific"}]}]' \
          ./helm/chatoverlay
      - name: Deploy Backend
        if: ${{ (needs.build_backend_image.result == 'success') && (needs.build_frontend_image.result == 'skipped') }}
        env:
          KUBECONFIG: ./kubeconfig
        run: |
          helm upgrade --install "${{ format('chatoverlay-{0}', github.ref_name) }}" \
          --namespace "${{ format('chatoverlay-{0}', github.ref_name) }}" \
          --create-namespace \
          --reuse-values \
          --set frontend.skip=true \
          --set backendImage.tag="${{ format('{0}-{1}', github.ref_name, needs.set_variables.outputs.backend_version) }}" \
          --set-json 'backendIngress.hosts=[{"host":"${{ format('chatoverlay-{0}-backend.etmbp.lo', github.ref_name)}}","paths":[{"path":"/","pathType":"ImplementationSpecific"}]}]' \
          ./helm/chatoverlay
      - name: Deploy Frontend
        if: ${{ (needs.build_backend_image.result == 'skipped') && (needs.build_frontend_image.result == 'success') }}
        env:
          KUBECONFIG: ./kubeconfig
        run: |
          helm upgrade --install "${{ format('chatoverlay-{0}', github.ref_name) }}" \
          --namespace "${{ format('chatoverlay-{0}', github.ref_name) }}" \
          --create-namespace \
          --reuse-values \
          --set backend.skip=true \
          --set frontendImage.tag="${{ format('{0}-{1}', github.ref_name, needs.set_variables.outputs.frontend_version) }}" \
          --set-json 'frontendIngress.hosts=[{"host":"${{ format('chatoverlay-{0}.etmbp.lo', github.ref_name)}}","paths":[{"path":"/","pathType":"ImplementationSpecific"}]}]' \
          ./helm/chatoverlay